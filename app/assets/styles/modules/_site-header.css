.site-header {
    position: absolute;
    z-index: 2;
    /* if z-index is not greater than the default z-index 
        of its same-level next div element, this div will
        be hidden from view bec the next div will take over
        the occupied space once main div is positioned
        absolute. need to have greater priority in order
        to be on top and will be seen.
    */
    width: 100%;
    /* if position is absolute, this div will shrink to its
        smallest container as possible. you have to explicitly
        define to make it occupy the 100% width of the container
    */
    padding: 10px 0;
    transition: background-color 0.3s ease-out;
    
    &--is-expanded {
        background-color: rgba($mainBlue, 0.55);    
        /* this is applicable only when the MobileMenu is toggled
            so if you want tto put transition here, you need to define
            the transition properties from the base element
        */
    }
    
    @mixin atMedium {
        background-color: rgba($mainBlue, .3); /* where is the bg color for small?? it is added above */
        /* for the sticky header */
        position: fixed;
        
        &--dark {
            background-color: rgba(23, 51, 72, 0.85);
        }
        /* for the sticky header - end */
    }
    
    &__logo {
        position: absolute;    
        top: 0;
        background-color: $mainBlue;
        padding: 25px 36px;
        /* since the positioning is absolute, make use of
            transform property to position the mobile logo and
            return to the original position for big screen
        */
        left: 50%;
        transform: translateX(-50%) scale(0.8);
        transform-origin: 50% 0; /* or top */  
        transition: transform 0.3s ease-out;
        
        @mixin atMedium {
            left: auto; 
            /* if you use 0 here, it will ignore any margin of the wrapper */
            transform: translateX(0);
            
            /* for the sticky header */
            .site-header--dark & {
                /* equivalent to: .site-header--dark .site-header__logo */
                transform: scale(.565);
            }
            /* for the sticky header - end */
        }
    }
    
    &__logo__graphic {
        text-indent: -9999px;
    }
    
    &__menu-icon {
        width: 20px;
        height: 20px;
        position: absolute;
        /* set this to absolute, to make it as if not part of
            the whole header then pos to top rightmost corner
        */
        top: 10px;
        right: 10px;
        z-index: 2;
        /* since __menu-content once visible has z-index of 1,
            this menu-icon should still be clickable
            so need to just up the z-index of this to 2
        */
        
        &::before {
            /* .site-header__menu-icon::before
                the parent where youre intending to
                insert a ::before (first element)
                is this parent div and not the middle bar
                middle bar is just part of the parent div
            */
            position: absolute;
            content: "";
            background-color: #fff;
            top: 0;
            left: 0;
            height: 3px;
            width: 20px;
            transition: all 0.3s ease-out;
        }
        
        &::after {
            /* .site-header__menu-icon::after */
            position: absolute;
            content: "";
            background-color: #fff;
            bottom: 0;
            left: 0;
            height: 3px;
            width: 20px;
            transition: all 0.3s ease-out;
        }
        
        &__middle {
            position: relative;
            background-color: #fff;
            top: 8.5px;
            height: 3px;
            transition: all 0.3s ease-out;
        }
        
        @mixin atMedium {
            display: none;
        }
    }
    
    &__menu-icon--close-x {
        /* you cant put this inside the &__menu-icon above
            bec there's no way you'll be able to manipulate
            its child elements, you have to manually call
            the middle bar with its full name since 
            it does not use this 
        */
        &::before {
            transform: rotate(45deg) scaleX(1.25);
            transform-origin: 1px 3px;
        }
        
        &::after {
            transform: rotate(-45deg) scaleX(1.25);
            transform-origin: 1px 0;
        }
        
        .site-header__menu-icon__middle {
            transform: scaleX(0);
            transform-origin: 0 50%;
        }
    }
    
    &__menu-content {
        /* float: right; note: nothing to float now since 
            its 2 elements were all set to float, 
            its only use now is to hide unhide 
            the menu content with js
        */
        
        /* in regards to animation of mobileMenu,
            instead of using display: none, will use 
            opacity 0 or 1
          now if mobileMenu has opacity 0 (invisible),
            need to set priority lowest among the element
            so it wont be clickable if its invisible
            and then clickable if visible; also set the 
            position to relative bec z-index wont
            work without it
          also, in connection to the toggle bgcolor,
            if display:none or block is used, its ease out 
            transition is somehow lagging compared to the 
            transtion of the menu content
            
          so from:
            display: none; to display: block;
          to:
            opacity: 0; to opacity: 1;
            z-index: -10; to z-indez: 1;
            position: relative;
            transform: scale(1.2); to transform: scale(1); --> zoom out/in
            transition: all (opacity, z-index and transform) 0.3s ease-out;
        */
        opacity: 0;
        transform: scale(1.2);
        transition: all 0.3s ease-out;
        position: relative;
        z-index: -10;
        padding-top: 90px;
        text-align: center;
        
        @mixin atMedium {
            opacity: 1;
            z-index: 1;
            padding-top: 0;
            transform: scale(1);
        }
        
        &--is-visible {
            opacity: 1;
            z-index: 1;
            transform: scale(1);
        }
    }
    
    &__btn_container {
        @mixin atMedium {
            float: right;
        }
    }
}